rref
?print
testit <- function(x = sort(runif(20)), ...)#
{#
    pb <- txtProgressBar(...)#
    for(i in c(0, x, 1)) {Sys.sleep(0.5); setTxtProgressBar(pb, i)}#
    Sys.sleep(1)#
    close(pb)#
}#
testit()#
testit(runif(10))#
testit(style=3)
mod
?mod
?modulo
4%2
4%%2
breakfast <- function(x)#
  {#
	steps <- 0#
	while (x != 1)#
		if (x%%2==0)#
			x <- x/2#
		else #
			x <- (x*3) - 1#
	steps <- steps + 1#
	return(steps)#
  }
breakfast(2)
breakfast(1)
breakfast(4)
breakfast(3)
breakfast(78)
breakfast <- function(x)#
  {#
	steps <- 0#
	while (x != 1){#
		if (x%%2==0)#
			x <- x/2#
		else #
			x <- (x*3) - 1#
	steps <- steps + 1#
	}#
	return(steps)#
  }
breakfast(78)
breakfast(1)
breakfast(2)
breakfast(3)
breakfast(4)
ihavetheworstbestfriendever <- breakfast(1:1024)
zeros(1)
ihavetheworstbestfriend <- rep(0,1204) #preallocation#
#
for i = 1:1024{#
ihavetheworstbestfriend <- breakfast(i)#
}
ihavetheworstbestfriend <- rep(0,1204) #preallocation#
#
for (i = 1:1024){#
ihavetheworstbestfriend <- breakfast(i)#
}
for (i in 1:1024){#
ihavetheworstbestfriend <- breakfast(i)#
}
ihavetheworstbestfriend <- rep(0,1204) #preallocation
for (i in 1:10){#
ihavetheworstbestfriend[i] <- breakfast(i)#
}
breakfast(1)
breakfast(2)
breakfast(3)
breakfast(4)
breakfast(5)
5*2
5*3
16/2
8/2
breakfast(6)
breakfast(5)
6/2
3*3+1
10/2
5*3+1
16/2
8/2
4/2
breakfast(2)
breakfast <- function(x)#
  {#
	steps <- 0#
	while (x != 1){#
		if (x%%2==0)#
			{x <- x/2}#
		else #
			{x <- (x*3) - 1}#
	steps <- steps + 1#
	}#
	return(steps)#
  }#
#
ihavetheworstbestfriend <- rep(0,1204) #preallocation
breakfast(2)
breakfast(6)
breakfast(5)
breakfast <- function(x)#
  {#
	steps <- 0#
	while (x != 1){#
		if (x%%2==0)#
			{x <- x/2}#
		else #
			{x <- (x*3) + 1}#
	steps <- steps + 1#
	}#
	return(steps)#
  }
breakfast(50)
breakfast(5)
breakfast(6)
#
ihavetheworstbestfriend <- rep(0,1204) #preallocation#
#
for (i in 1:10){#
ihavetheworstbestfriend[i] <- breakfast(i)#
}
ihavetheworstbestfriend <- rep(0,1204) #preallocation#
#
for (i in 1:100){#
ihavetheworstbestfriend[i] <- breakfast(i)#
}
ihavetheworstbestfriend <- rep(0,1204) #preallocation#
#
for (i in 1:1024){#
ihavetheworstbestfriend[i] <- breakfast(i)#
}
ihavetheworstbestfriend
ihavetheworstbestfriend <- rep(0,1024) #preallocation#
#
for (i in 1:1024){#
ihavetheworstbestfriend[i] <- breakfast(i)#
}
ihavetheworstbestfriend
summary(ihavetheworstbestfriend)
hist(ihavetheworstbestfriend)
hist(ihavetheworstbestfriend,breaks=178)
ihavetheworstbestfriend
ihavetheworstbestfriend[which(ihavetheworstbestfriend>0)]
ihavetheworstbestfriend[which(ihavetheworstbestfriend>100)]
hist(ihavetheworstbestfriend,breaks=178)
hh <- hist(ihavetheworstbestfriend,breaks=178)
hh
hh <- hist(ihavetheworstbestfriend,breaks=177)
hh
ihavetheworstbestfriend
hist(ihavetheworstbestfriend)
hist(ihavetheworstbestfriend,breaks=178)
x <- seq(1,1024)
x
plot(x,ihavetheworstbestfriend)
hist(ihavetheworstbestfriend,breaks=178)
hh <- hist(ihavetheworstbestfriend,breaks=178)
hh
summary(ihavetheworstbestfriend)
sort(ihavetheworstbestfriend)
sort(unique(ihavetheworstbestfriend))
godimhungry <- sort(unique(ihavetheworstbestfriend))
length(godimhungry)
178-144
compare
?intersect
setdiff(godimhungry, seq(1,178))
seq(1,178)
setdiff(seq(1,178),godimhungry)
setdiff(seq(0,178),godimhungry)
breakfast(77)
ihavetheworstbestfriend
clear
?Memory
?memory.size
qc
gc()
a <- data.frame(field1=c(10,20,30), field2=c(100,200,300))
a
aa <- subset(a, field1 == 20)
aa
a
a <- a[-which(field1==20),]
a <- a[-which(a$field1==20),]
a
smokers  <- c( 83, 90, 129, 70 )#
patients <- c( 86, 93, 136, 82 )#
pairwise.prop.test(smokers, patients)
a <- c(1, 3, 4, 5, 6)
a
b <- c(0, 6, 3, 6, 2)
min(a)
?sapply
?pmin
dat <- data.frame(a=(1:3)/7, y=c('a','b1','b2'), z=1:3)
dat
dat[1,1]
dat[1,2]
dat[1,2][1]
dat[1,2][0
dat[1,2][0]
dat[][1,2]]
dat[[1,2]]
dat[1,2]
dat[[1]]
dat[[2]]
dat[[2]][1]
dat[[2]][[1]]
drop.levels(dat)
package(gdata)
library(gdata)
drop.levels(dat)
dat
dat[2,1]
dat[1,2]
dat[2]
dat <- data.frame(a=(1:3)/7, y=c('a','b1','b2'), z=1:3)
dat[2]
dat[2,1]
dat[1,2]
dat <- data.frame(a=(1:3)/7, y=c('a','b1','b2'), z=1:3)
dat[1,2]
dat <- data.frame(a=(1:3)/7, y=I(c('a','b1','b2')), z=1:3)
dat[1,2]
dat[[1,2]]
dat <- data.frame(a=(1:3)/7, y=I(c(dat <- data.frame(a=(1:3)/7, y=c('a','b1','b2'), z=1:3)#
dat2 <- upData(dat, x=x^2, x=x-5, m=x/10, #
               rename=c(a='x'), drop='z',#
               labels=c(x='X', y='test'),#
               levels=list(y=list(a='a',b=c('b1','b2'))))#
dat2,'b1','b2')), z=1:3)
dat <- data.frame(a=(1:3)/7, y=c('a','b1','b2'), z=1:3)#
dat2 <- upData(dat, x=x^2, x=x-5, m=x/10, #
               rename=c(a='x'), drop='z',#
               labels=c(x='X', y='test'),#
               levels=list(y=list(a='a',b=c('b1','b2'))))#
dat2
dat <- data.frame(a=(1:3)/7, y=c('a','b1','b2'), z=1:3)#
dat2 <- upData(dat, x=x^2, x=x-5, m=x/10, #
               rename=c(a='x'), drop='z',#
               labels=c(x='X', y='test'),#
               levels=list(y=list(a='a',b=c('b1','b2'))))
library(Hmisc)
dat <- data.frame(a=(1:3)/7, y=c('a','b1','b2'), z=1:3)#
dat2 <- upData(dat, x=x^2, x=x-5, m=x/10, #
               rename=c(a='x'), drop='z',#
               labels=c(x='X', y='test'),#
               levels=list(y=list(a='a',b=c('b1','b2'))))#
dat2
dat
dat2
dat2[2,1]
dat2[1,2]
describe(dat2)
summary(dat2)
140-125
15/(5/sqrt(5))
sqrt(30)
package.install(xtable)
install.packages(xtable)
install.packages("xtable")
cell
cell maximum size
packages.install
install.packages("xtable")
file.path(R.home(), 'share', 'texmf')
sin(pi/9)
(cos(pi/7))
(cos(pi/7))^2
?hist
Light=c(20,20,20,20,21,24,44,60,90,9,101)
rmax=c(1.73,1.65,2.02,1.89,2.61,1.36,2.37,2.08,2.69,2.32,3.67)
hist(rmax)
plot(Light,rmax)
fit=lm(rmax~Light)
summary(fit)
Light
Light=c(20,20,20,20,21,24,44,60,90,94,101)
fit=lm(rmax~Light)
summary(fit)
plot(Light,rmax)
abline(fit)
names(fit)
X=read.table('ChlorellaGrowth.txt'); #
X=as.matrix(X); #
Light=X[,1]; rmax=X[,2]; #
LogLight<- log(Light)#
#
par(cex=1.5,cex.main=0.9); #
plot(Light,rmax,xlab="Log Light intensity (uE/m2/s)", ylab="Maximum growth rate rmax (1/d)",pch=16); #
#
# xlab and ylab are x and y axis labels, pch is "plotting character"#
# cex is 'character expansion' - cex=1.5 increases symbol & label sizes by 50%#
# cex.main sets the character expansion for the main title of the plot #
#
title(main="Data from Fussmann et al. (2000) system");#
fit=lm(rmax~LogLight);#
abline(fit)#
#
# Next we get the regression equation to 'display itself' on the graph#
c1=round(fit$coef[1],digits=3); 	#
c2=round(fit$coef[2],digits=3); #
text(60,3,paste("rmax=",c1,"+",c2,"Log Light")); #
#
# Use ?round, ?text and ?paste to read about these commands#
# for working with plots
X=read.table('ChlorellaGrowth.txt'); #
X=as.matrix(X); #
Light=X[,1]; rmax=X[,2]; #
LogLight<- log(Light)#
#
par(cex=1.5,cex.main=0.9); #
plot(Light,rmax,xlab="Log Light intensity (uE/m2/s)", ylab="Maximum growth rate rmax (1/d)",pch=16); #
#
# xlab and ylab are x and y axis labels, pch is "plotting character"#
# cex is 'character expansion' - cex=1.5 increases symbol & label sizes by 50%#
# cex.main sets the character expansion for the main title of the plot #
#
title(main="Data from Fussmann et al. (2000) system");#
fit=lm(rmax~LogLight);#
abline(fit)#
#
# Next we get the regression equation to 'display itself' on the graph#
c1=round(fit$coef[1],digits=3); 	#
c2=round(fit$coef[2],digits=3); #
text(60,3,paste("rmax=",c1,"+",c2,"Log Light")); #
#
# Use ?round, ?text and ?paste to read about these commands#
# for working with plots
fit
rmax
LogLight
fit=log(lm(rmax~LogLight))
fit=lm(log(rmax~LogLight))
rmax
log(rmax)
fit=lm(log(rmax)~LogLight)
abline(fit)
fit
> fit=lm(rmax~LogLight);
fit=lm(rmax~LogLight);
abline(fit)
abline(2)
abline(y=2)
fit
abline(log(fit))
abline(log(fit$Intercept))
fit$Intercept
X=read.table('e:\\classes\\dynmod\\lab\\Rfiles\\ChlorellaGrowth.txt'); #
X=as.matrix(X); #
Light=X[,1]; rmax=X[,2]; #
#
par(cex=1.5,cex.main=0.9); #
plot(Light,rmax,xlab="Light intensity (uE/m2/s)", ylab="Maximum growth rate rmax (1/d)",pch=16); #
#
# xlab and ylab are x and y axis labels, pch is "plotting character"#
# cex is 'character expansion' - cex=1.5 increases symbol & label sizes by 50%#
# cex.main sets the character expansion for the main title of the plot #
#
title(main="Data from Fussmann et al. (2000) system");#
fit=lm(rmax~Light);#
summary(fit); abline(fit); #
#
# Next we get the regression equation to 'display itself' on the graph#
c1=round(fit$coef[1],digits=3); 	# intercept	#
c2=round(fit$coef[2],digits=3); 	# slope#
text(50,3,paste("rmax=",c1,"+",c2,"Light")); #
#
# Use ?round, ?text and ?paste to read about these commands#
# for working with plots
X=read.table('ChlorellaGrowth.txt'); #
X=as.matrix(X); #
Light=X[,1]; rmax=X[,2]; #
LogLight<- log(Light)#
#
par(cex=1.5,cex.main=0.9); #
plot(Light,rmax,xlab="Log Light intensity (uE/m2/s)", ylab="Maximum growth rate rmax (1/d)",pch=16); #
#
# xlab and ylab are x and y axis labels, pch is "plotting character"#
# cex is 'character expansion' - cex=1.5 increases symbol & label sizes by 50%#
# cex.main sets the character expansion for the main title of the plot #
#
title(main="Data from Fussmann et al. (2000) system");#
fit=lm(rmax~LogLight);#
abline(fit)#
#
# Next we get the regression equation to 'display itself' on the graph#
c1=round(fit$coef[1],digits=3); 	#
c2=round(fit$coef[2],digits=3); #
text(60,3,paste("rmax=",c1,"+",c2,"Log Light"));
X=read.table('e:\\classes\\dynmod\\lab\\Rfiles\\ChlorellaGrowth.txt'); #
X=as.matrix(X); #
Light=X[,1]; rmax=X[,2]; #
#
par(cex=1.5,cex.main=0.9); #
plot(Light,rmax,xlab="Light intensity (uE/m2/s)", ylab="Maximum growth rate rmax (1/d)",pch=16); #
#
# xlab and ylab are x and y axis labels, pch is "plotting character"#
# cex is 'character expansion' - cex=1.5 increases symbol & label sizes by 50%#
# cex.main sets the character expansion for the main title of the plot #
#
title(main="Data from Fussmann et al. (2000) system");#
fit=lm(rmax~Light);#
summary(fit); abline(fit); #
#
# Next we get the regression equation to 'display itself' on the graph#
c1=round(fit$coef[1],digits=3); 	# intercept	#
c2=round(fit$coef[2],digits=3); 	# slope#
text(50,3,paste("rmax=",c1,"+",c2,"Light")); #
#
# Use ?round, ?text and ?paste to read about these commands#
# for working with plots
fit
abline(fit)
abline(fit, color="Red")
X=read.table('ChlorellaGrowth.txt'); #
X=as.matrix(X); #
Light=X[,1]; rmax=X[,2]; #
LogLight<- log(Light)#
#
par(cex=1.5,cex.main=0.9); #
plot(Light,rmax,xlab="Log Light intensity (uE/m2/s)", ylab="Maximum growth rate rmax (1/d)",pch=16); #
#
# xlab and ylab are x and y axis labels, pch is "plotting character"#
# cex is 'character expansion' - cex=1.5 increases symbol & label sizes by 50%#
# cex.main sets the character expansion for the main title of the plot #
#
title(main="Data from Fussmann et al. (2000) system");#
fit=lm(rmax~LogLight);#
abline(fit)#
#
# Next we get the regression equation to 'display itself' on the graph#
c1=round(fit$coef[1],digits=3); 	#
c2=round(fit$coef[2],digits=3); #
text(60,3,paste("rmax=",c1,"+",c2,"Log Light"));
fit
plot(fit)
xlab
